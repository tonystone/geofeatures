language: objective-c
xcode_workspace: Example/GeoFeatures.xcworkspace
xcode_scheme: GeoFeatures-Example
osx_image: xcode7.3

before_install:
#    - brew install xctool
    - git clone https://github.com/facebook/xctool.git
    - gem install cocoapods --quiet
    - pod --version
    - pod setup --silent
    - pod repo update --silent
    - IPHONE_SIMULATOR_ID=$(xcrun instruments -s | grep -o "iPhone 6 (9.1) \[.*\]" | grep -o "\[.*\]" | sed "s/^\[\(.*\)\]$/\1/")
    - MAC_SIMULATOR_ID=$(xcrun instruments -s | grep -o "Travisâ€™s Mac\[.*\]" | grep -o "\[.*\]" | sed "s/^\[\(.*\)\]$/\1/")
    
env:
  - COCOAPODS_DISABLE_DETERMINISTIC_UUIDS=1

script:
#  - travis_wait pod lib lint
  
  - open -a "simulator" --args -CurrentDeviceUDID $IPHONE_SIMULATOR_ID
  - travis_wait xctool/xctool.sh  -workspace Example/GeoFeatures.xcworkspace -scheme GeoFeatures-iOS-Example -sdk iphonesimulator GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES test

  - open -a "simulator" --args -CurrentDeviceUDID $MAC_SIMULATOR_ID
  - travis_wait xctool/xctool.sh  -workspace Example/GeoFeatures.xcworkspace -scheme GeoFeatures-OSX-Example -sdk macosx GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES test

after_success:
  - bash <(curl -s https://codecov.io/bash)
