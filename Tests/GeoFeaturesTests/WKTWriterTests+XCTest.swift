///
/// WKTWriterTests+XCTest.swift
///
/// Copyright 2016 Tony Stone
///
///  Licensed under the Apache License, Version 2.0 (the "License");
///  you may not use this file except in compliance with the License.
///  You may obtain a copy of the License at
///
///  http://www.apache.org/licenses/LICENSE-2.0
///
///  Unless required by applicable law or agreed to in writing, software
///  distributed under the License is distributed on an "AS IS" BASIS,
///  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
///  See the License for the specific language governing permissions and
///  limitations under the License.
///
///  Created by Tony Stone on 5/4/16.
///
import XCTest

///
/// NOTE: This file was auto generated by file process_test_files.rb.
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

extension WKTWriterCoordinate2DTests {

   static var allTests: [(String, (WKTWriterCoordinate2DTests) -> () throws -> Void)] {
      return [
                ("testWriteUnsupportedGeometry", testWriteUnsupportedGeometry),
                ("testWritePoint", testWritePoint),
                ("testWriteLineStringEmpty", testWriteLineStringEmpty),
                ("testWriteLineStringsinglePoint", testWriteLineStringsinglePoint),
                ("testWriteLineStringmultiplePoints", testWriteLineStringmultiplePoints),
                ("testWriteLinearRingEmpty", testWriteLinearRingEmpty),
                ("testWriteLinearRing", testWriteLinearRing),
                ("testWritePolygonEmpty", testWritePolygonEmpty),
                ("testWritePolygon", testWritePolygon),
                ("testWritePolygonZeroInnerRings", testWritePolygonZeroInnerRings),
                ("testWriteMultiPointEmpty", testWriteMultiPointEmpty),
                ("testWriteMultiPointSinglePoint", testWriteMultiPointSinglePoint),
                ("testWriteMultiPointTwoPoints", testWriteMultiPointTwoPoints),
                ("testWriteMultiLineStringEmpty", testWriteMultiLineStringEmpty),
                ("testWriteMultiLineStringSingleLineString", testWriteMultiLineStringSingleLineString),
                ("testWriteMultiLineStringMultipleLineString", testWriteMultiLineStringMultipleLineString),
                ("testWriteMultiPolygonEmpty", testWriteMultiPolygonEmpty),
                ("testWriteMultiPolygon", testWriteMultiPolygon),
                ("testWriteGeometryCollection", testWriteGeometryCollection)
           ]
   }
}
extension WKTWriterCoordinate2DMTests {

   static var allTests: [(String, (WKTWriterCoordinate2DMTests) -> () throws -> Void)] {
      return [
                ("testWritePoint", testWritePoint),
                ("testWriteLineStringEmpty", testWriteLineStringEmpty),
                ("testWriteLineStringsinglePoint", testWriteLineStringsinglePoint),
                ("testWriteLineStringmultiplePoints", testWriteLineStringmultiplePoints),
                ("testWriteLinearRingEmpty", testWriteLinearRingEmpty),
                ("testWriteLinearRing", testWriteLinearRing),
                ("testWritePolygonEmpty", testWritePolygonEmpty),
                ("testWritePolygon", testWritePolygon),
                ("testWritePolygonZeroInnerRings", testWritePolygonZeroInnerRings),
                ("testWriteMultiPointEmpty", testWriteMultiPointEmpty),
                ("testWriteMultiPointSinglePoint", testWriteMultiPointSinglePoint),
                ("testWriteMultiPointTwoPoints", testWriteMultiPointTwoPoints),
                ("testWriteMultiLineStringEmpty", testWriteMultiLineStringEmpty),
                ("testWriteMultiLineStringSingleLineString", testWriteMultiLineStringSingleLineString),
                ("testWriteMultiLineStringMultipleLineString", testWriteMultiLineStringMultipleLineString),
                ("testWriteMultiPolygonEmpty", testWriteMultiPolygonEmpty),
                ("testWriteMultiPolygon", testWriteMultiPolygon)
           ]
   }
}
extension WKTWriterCoordinate3DTests {

   static var allTests: [(String, (WKTWriterCoordinate3DTests) -> () throws -> Void)] {
      return [
                ("testWritePoint", testWritePoint),
                ("testWriteLineStringEmpty", testWriteLineStringEmpty),
                ("testWriteLineStringsinglePoint", testWriteLineStringsinglePoint),
                ("testWriteLineStringmultiplePoints", testWriteLineStringmultiplePoints),
                ("testWriteLinearRingEmpty", testWriteLinearRingEmpty),
                ("testWriteLinearRing", testWriteLinearRing),
                ("testWritePolygonEmpty", testWritePolygonEmpty),
                ("testWritePolygon", testWritePolygon),
                ("testWritePolygonZeroInnerRings", testWritePolygonZeroInnerRings),
                ("testWriteMultiPointEmpty", testWriteMultiPointEmpty),
                ("testWriteMultiPointSinglePoint", testWriteMultiPointSinglePoint),
                ("testWriteMultiPointTwoPoints", testWriteMultiPointTwoPoints),
                ("testWriteMultiLineStringEmpty", testWriteMultiLineStringEmpty),
                ("testWriteMultiLineStringSingleLineString", testWriteMultiLineStringSingleLineString),
                ("testWriteMultiLineStringMultipleLineString", testWriteMultiLineStringMultipleLineString),
                ("testWriteMultiPolygonEmpty", testWriteMultiPolygonEmpty),
                ("testWriteMultiPolygon", testWriteMultiPolygon)
           ]
   }
}
extension WKTWriterCoordinate3DMTests {

   static var allTests: [(String, (WKTWriterCoordinate3DMTests) -> () throws -> Void)] {
      return [
                ("testWritePoint", testWritePoint),
                ("testWriteLineStringEmpty", testWriteLineStringEmpty),
                ("testWriteLineStringsinglePoint", testWriteLineStringsinglePoint),
                ("testWriteLineStringmultiplePoints", testWriteLineStringmultiplePoints),
                ("testWriteLinearRingEmpty", testWriteLinearRingEmpty),
                ("testWriteLinearRing", testWriteLinearRing),
                ("testWritePolygonEmpty", testWritePolygonEmpty),
                ("testWritePolygon", testWritePolygon),
                ("testWritePolygonZeroInnerRings", testWritePolygonZeroInnerRings),
                ("testWriteMultiPointEmpty", testWriteMultiPointEmpty),
                ("testWriteMultiPointSinglePoint", testWriteMultiPointSinglePoint),
                ("testWriteMultiPointTwoPoints", testWriteMultiPointTwoPoints),
                ("testWriteMultiLineStringEmpty", testWriteMultiLineStringEmpty),
                ("testWriteMultiLineStringSingleLineString", testWriteMultiLineStringSingleLineString),
                ("testWriteMultiLineStringMultipleLineString", testWriteMultiLineStringMultipleLineString),
                ("testWriteMultiPolygonEmpty", testWriteMultiPolygonEmpty),
                ("testWriteMultiPolygon", testWriteMultiPolygon)
           ]
   }
}
