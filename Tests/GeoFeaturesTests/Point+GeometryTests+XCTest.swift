///
/// Point+GeometryTests+XCTest.swift
///
/// Copyright 2016 Tony Stone
///
///  Licensed under the Apache License, Version 2.0 (the "License");
///  you may not use this file except in compliance with the License.
///  You may obtain a copy of the License at
///
///  http://www.apache.org/licenses/LICENSE-2.0
///
///  Unless required by applicable law or agreed to in writing, software
///  distributed under the License is distributed on an "AS IS" BASIS,
///  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
///  See the License for the specific language governing permissions and
///  limitations under the License.
///
///  Created by Tony Stone on 5/4/16.
///
import XCTest

///
/// NOTE: This file was auto generated by file process_test_files.rb.
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

extension PointGeometryCoordinate2DFloatingPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate2DFloatingPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
extension PointGeometryCoordinate2DMFloatingPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate2DMFloatingPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
extension PointGeometryCoordinate3DFloatingPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate3DFloatingPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
extension PointGeometryCoordinate3DMFloatingPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate3DMFloatingPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
extension PointGeometryCoordinate2DFixedPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate2DFixedPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
extension PointGeometryCoordinate2DMFixedPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate2DMFixedPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
extension PointGeometryCoordinate3DFixedPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate3DFixedPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
extension PointGeometryCoordinate3DMFixedPrecisionCartesianTests {

   static var allTests: [(String, (PointGeometryCoordinate3DMFixedPrecisionCartesianTests) -> () throws -> Void)] {
      return [
                ("testDimension", testDimension),
                ("testIsEmpty", testIsEmpty),
                ("testEqualsWithIntOneTrue", testEqualsWithIntOneTrue),
                ("testEqualsWithIntOneFalse", testEqualsWithIntOneFalse),
                ("testEqualsWithPointNonPointFalse", testEqualsWithPointNonPointFalse),
                ("testBoundary", testBoundary)
           ]
   }
}
